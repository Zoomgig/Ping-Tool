<Page
    x:Class="PingTool.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helper="using:PingTool.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xaml="using:Windows.UI.Xaml"
    Style="{StaticResource PageStyle}"
    mc:Ignorable="d">
    <Page.Resources>
        <helper:EnumToBooleanConverter x:Key="EnumToBooleanConverter" EnumType="ElementTheme" />
        <converters:BoolToVisibilityConverter
            x:Name="ReverseBoolToVisibility"
            FalseValue="Visible"
            TrueValue="Collapsed" />
        <converters:BoolNegationConverter x:Name="BoolNegationConverter" />
    </Page.Resources>
    <Grid Margin="{StaticResource MediumLeftRightMargin}">
        <StackPanel x:Name="ContentArea">


            <TextBlock
                x:Name="HeaderTxt"
                x:Uid="Settings_Personalization"
                Style="{ThemeResource SubtitleTextBlockStyle}" />
            <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                <TextBlock x:Uid="Settings_Theme" />

                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <RadioButton
                        x:Uid="Settings_Theme_Light"
                        Checked="ThemeChanged_CheckedAsync"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Light</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        x:Uid="Settings_Theme_Dark"
                        Checked="ThemeChanged_CheckedAsync"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Dark</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        x:Uid="Settings_Theme_Default"
                        Checked="ThemeChanged_CheckedAsync"
                        FontSize="15"
                        GroupName="AppTheme"
                        IsChecked="{x:Bind ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Default</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                </StackPanel>
            </StackPanel>
            <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Ping Setting" />
            <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                <TextBlock Text="Ping Autostart" />
                <ToggleSwitch x:Name="AutoStartPing" Toggled="ToggleSwitch_ToggledAsync" />
                <!--<TextBlock Text="Max Ping History" />
                <Slider
                    x:Name="PingHistoryCount"
                    Width="300"
                    HorizontalAlignment="Left"
                    Maximum="100"
                    Minimum="10" />-->
            </StackPanel>
            <TextBlock x:Uid="Settings_User" Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel
                Margin="{StaticResource SmallTopMargin}"
                Orientation="Horizontal"
                Visibility="{x:Bind IsLoggedIn, Mode=OneWay}">
                <Ellipse Width="64" Height="64">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{x:Bind User.Photo, Mode=OneWay}" Stretch="UniformToFill" />
                    </Ellipse.Fill>
                </Ellipse>
                <StackPanel Margin="{StaticResource SmallLeftMargin}">
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="{x:Bind User.Name, Mode=OneWay}" />
                    <TextBlock
                        Margin="{StaticResource XSmallTopMargin}"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="{x:Bind User.UserPrincipalName, Mode=OneWay}" />
                </StackPanel>
            </StackPanel>
            <HyperlinkButton
                x:Uid="Settings_LogOut"
                Margin="{StaticResource XSmallTopMargin}"
                Click="OnLogOut"
                IsEnabled="{x:Bind IsBusy, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                Visibility="{x:Bind IsLoggedIn, Mode=OneWay}" />
            <TextBlock
                x:Uid="Settings_NoUserLoggedIn"
                Margin="{StaticResource XSmallTopMargin}"
                Style="{ThemeResource BodyTextBlockStyle}"
                Visibility="{x:Bind IsLoggedIn, Mode=OneWay, Converter={StaticResource ReverseBoolToVisibility}}" />
            <HyperlinkButton
                x:Uid="Settings_LogIn"
                Margin="{StaticResource XSmallTopMargin}"
                Click="OnLogIn"
                IsEnabled="{x:Bind IsBusy, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                Visibility="{x:Bind IsLoggedIn, Mode=OneWay, Converter={StaticResource ReverseBoolToVisibility}}" />

            <TextBlock x:Uid="Settings_About" Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel Margin="{StaticResource XSmallTopMargin}">
                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="{x:Bind VersionDescription, Mode=OneWay}" />
                <TextBlock
                    x:Uid="Settings_AboutDescription"
                    Margin="{StaticResource XSmallTopMargin}"
                    Style="{ThemeResource BodyTextBlockStyle}" />

                <HyperlinkButton x:Uid="Settings_PrivacyTermsLink" Margin="{StaticResource XSmallTopMargin}" />
                <HyperlinkButton
                    Margin="{StaticResource XSmallTopMargin}"
                    Content="GitHub Repository"
                    NavigateUri="https://github.com/avikeid2007/Ping-Tool" />
            </StackPanel>
        </StackPanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderTxt.Margin" Value="56 4 0 0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderTxt.Margin" Value="0 0 0 0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderTxt.Margin" Value="0 0 0 0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateXWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource XWideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderTxt.Margin" Value="0 0 0 0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
